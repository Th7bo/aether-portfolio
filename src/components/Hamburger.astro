<button class="hamburger" aria-label="Toggle menu">
  <span class="line"></span>
  <span class="line"></span>
  <span class="line"></span>
</button>

<style>
  .hamburger {
    display: none;
    flex-direction: column;
    justify-content: space-around;
    width: 2rem;
    height: 2rem;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 2000; /* Higher z-index to stay above overlay */
    position: relative;
  }

  .line {
    width: 2rem;
    height: 0.25rem;
    background: rgba(var(--text), 0.8);
    border-radius: 10px;
    transition: all 0.3s ease-in-out;
    position: relative;
    transform-origin: 1px;
  }

  .hamburger.active .line:nth-child(1) {
    transform: rotate(45deg);
    background: rgba(var(--text), 1);
  }

  .hamburger.active .line:nth-child(2) {
    opacity: 0;
    transform: translateX(20px);
  }

  .hamburger.active .line:nth-child(3) {
    transform: rotate(-45deg);
    background: rgba(var(--text), 1);
  }

  @media (max-width: 768px) {
    .hamburger {
      display: flex;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const hamburger = document.querySelector(".hamburger");
    const navLinks = document.querySelector(".nav-links");

    if (!hamburger || !navLinks) {
      console.error("Navigation elements not found");
      return;
    }

    // Toggle menu on hamburger click
    hamburger.addEventListener("click", () => {
      hamburger.classList.toggle("active");
      navLinks.classList.toggle("expanded");

      // Add menu-open class to body to control the overlay
      document.body.classList.toggle("menu-open");

      // Toggle body scroll lock
      document.body.classList.toggle("no-scroll");

      // Lock scroll position
      if (document.body.classList.contains("no-scroll")) {
        document.body.style.top = `-${window.scrollY}px`;
      } else {
        // Restore scroll position
        const scrollY = document.body.style.top;
        document.body.style.top = "";
        window.scrollTo(0, parseInt(scrollY || "0") * -1);
      }
    });

    // Close menu when clicking on a link
    document.querySelectorAll(".nav-links a").forEach((link) => {
      link.addEventListener("click", () => {
        if (navLinks.classList.contains("expanded")) {
          // Restore scroll position
          const scrollY = document.body.style.top;
          document.body.style.top = "";

          // Remove classes
          document.body.classList.remove("no-scroll");
          document.body.classList.remove("menu-open");
          hamburger.classList.remove("active");
          navLinks.classList.remove("expanded");

          // Restore scroll position
          window.scrollTo(0, parseInt(scrollY || "0") * -1);
        }
      });
    });

    // Close menu when clicking outside
    document.addEventListener("click", (event) => {
      const target = event.target as HTMLElement;

      if (
        navLinks.classList.contains("expanded") &&
        !target.closest(".hamburger") &&
        !target.closest(".nav-links")
      ) {
        // Restore scroll position
        const scrollY = document.body.style.top;
        document.body.style.top = "";

        // Remove classes
        document.body.classList.remove("no-scroll");
        document.body.classList.remove("menu-open");
        hamburger.classList.remove("active");
        navLinks.classList.remove("expanded");

        // Restore scroll position
        window.scrollTo(0, parseInt(scrollY || "0") * -1);
      }
    });
  });
</script>
